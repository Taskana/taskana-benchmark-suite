name: TASKANA Benchmark

on:
  workflow_dispatch:
    inputs:
      ec2-instance-identifier:
        description: EC2 Instance Identifier
        required: false
        default: 'TASKANA Benchmark Runner'
        type: string
      taskana-version:
        description: TASKANA Version
        required: true
        default: 'latest'
        type: string

jobs:
  provision-environment:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Setup aws Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: '${{ secrets.TASKANA_BENCHMARK_AWS_KEY }}'
          aws-secret-access-key: '${{ secrets.TASKANA_BENCHMARK_AWS_SECRET }}'
          aws-region: eu-central-1
      - name: Instantiate Terraform Action
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - name: Run Terraform Scripts
        id: apply
        env:
          TF_VAR_ec2_instance_identifier: '${{ github.event.inputs.ec2-instance-identifier }}'
        run: |
          cd terraform/
          terraform init
          terraform validate
          terraform plan
          terraform apply -auto-approve
      - shell: bash
        run: |
          terraform output bastion.ip > taskana-ec2-ip.txt
      - name: Store EC2 IP for SSH actions
        uses: actions/upload-artifact@v1
        with:
          name: taskana-ec2-ip
          path: taskana-ec2-ip.txt
          
  run-benchmark:
    runs-on: ubuntu-latest
    needs: provision-environment
    steps:
      - name: Retrieve EC2 IP for SSH actions
        uses: actions/download-artifact@v1
        with:
          name: taskana-ec2-ip
      - shell: bash
        run: echo "TASKANA_EC2_IP=$(cat taskana-ec2-ip.txt)" >> $GITHUB_ENV

    